{"version":3,"sources":["firebase/config.js","hooks/useFirestore.js","hooks/RemoveFirestoreImg.js","comps/ImageGrid.js","comps/Modal.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","comps/PostCard.js","comps/Title.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useFirestore","collection","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","RemoveImage","delete","then","console","log","catch","error","ImageGrid","setModal","setSelectedImg","handleClick","className","onClick","map","div","layout","whileHover","opacity","key","img","src","url","alt","initial","animate","transition","delay","RemoveFirestoreImg","setTimeout","length","style","gridColumn","gridRow","color","fontSize","margin","textAlign","Modal","e","target","classList","contains","y","useStorage","file","progress","setProgress","setError","setUrl","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","width","UploadForm","types","onChange","selected","files","includes","type","PostCard","selectedImg","backCard","setBackCard","address","setAddress","message","setMessage","stamp","setStamp","messageLeft","setMessageLeft","addressLeft","setAddressLeft","stampClick","fontWeight","value","placeholder","currMessage","slice","currAddress","Title","App","modal","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0587a21f.chunk.js","sourcesContent":["  // Your web app's Firebase configuration\n  import firebase from \"firebase/app\"\n  import \"firebase/storage\";\n  import \"firebase/firestore\";\n\n  var firebaseConfig = {\n    apiKey: \"AIzaSyAhtgCG34-kuOu2kwqf7wYlKT13RuNnxhE\",\n    authDomain: \"instaclone-e7884.firebaseapp.com\",\n    projectId: \"instaclone-e7884\",\n    storageBucket: \"instaclone-e7884.appspot.com\",\n    messagingSenderId: \"757794485689\",\n    appId: \"1:757794485689:web:3aa699217f43359816b268\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  const projectStorage = firebase.storage();\n  const projectFirestore = firebase.firestore();\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\n  \n  export { projectStorage, projectFirestore, timestamp };","import { useState, useEffect } from 'react';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFirestore = (collection) => {\n  const [docs, setDocs] = useState([]);\n\n  useEffect(() => {\n    const unsub = projectFirestore.collection(collection)\n      .orderBy('createdAt', 'desc')\n      .onSnapshot(snap => {\n        let documents = [];\n        snap.forEach(doc => {\n          documents.push({...doc.data(), id: doc.id});\n        });\n        setDocs(documents);\n      });\n\n    return () => unsub();\n    // this is a cleanup function that react will run when\n    // a component using the hook unmounts\n  }, [collection]);\n\n  return { docs };\n}\n\nexport default useFirestore;","import { projectFirestore } from '../firebase/config';\n\nconst RemoveImage = (collection, data) => {\n      projectFirestore.collection(collection).doc(data).delete().then(() => {\n          console.log(\"successfully deleted\");\n      }).catch((error) => {\n          console.log(\"error removing documnet: \", error)\n      })\n}\n  \n  \n  export default RemoveImage;","import React from \"react\"\nimport useFirestore from \"../hooks/useFirestore\";\nimport RemoveFirestoreImg from \"../hooks/RemoveFirestoreImg\"\nimport { motion } from \"framer-motion\";\n\nconst ImageGrid = ({ setModal, setSelectedImg, handleClick }) => {\n    const { docs } = useFirestore('images');\n\n    function handleRemove(collection, id) {\n        RemoveFirestoreImg(collection, id)\n    }\n\n    function noDocs() {\n            if (docs.length < 1) {\n                console.log(\"nothin\")\n                return <div style={{ gridColumn: \"1 / span 4\", gridRow: \"3\", color: \"white\", fontSize: \"5rem\", margin: \"0 auto\", textAlign: \"center\" }}> Please Upload an Image </div>\n            }\n            return null;\n        }\n    \n    return (\n        <div className=\"img-grid\" onClick={handleClick}>\n            {docs && docs.map(doc => (\n                <motion.div className=\"img-wrap\"\n                    layout\n                    whileHover={{ opacity: 1 }}\n                    key={doc.id}\n                >\n                    <motion.img src={doc.url} alt=\"uploaded pic\"\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        transition={{ delay: 1 }}\n                        onClick={() => {\n                            setSelectedImg(doc.url);\n                            setModal(false)\n                        }}\n                    />\n                    <div className=\"removeImage\" onClick={() => handleRemove('images', doc.id)}>\n                        x\n                    </div>\n\n                </motion.div>\n\n\n            ))}\n\n            {setTimeout(noDocs, 2000) }\n\n        </div>\n\n    )\n\n}\n\nexport default ImageGrid;","import React from \"react\"\nimport {motion} from \"framer-motion\"\nimport ImageGrid from \"./ImageGrid\"\nconst Modal = ({ setModal, setSelectedImg}) => { \n\n    function handleClick(e){\n        if (e.target.classList.contains('img-grid') || e.target.classList.contains('backdrop')){\n            setModal(false)\n        }\n    }\n\n    return (\n        <>\n            {\n                <motion.div className=\"backdrop\" onClick={handleClick}\n                initial={{opacity: 0}}\n                animate={{opacity: 1}}\n                >\n                    <motion.div\n                    initial={{y:\"-100vh\"}}\n                    animate={{y:\"0\"}}\n                    >\n                    <ImageGrid setSelectedImg={setSelectedImg} setModal={setModal} handleClick={handleClick} />\n                    </motion.div>\n                </motion.div>\n            }\n        </>\n\n    )\n}\n\nexport default Modal;\n\n","import { useState, useEffect } from 'react';\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config';\n\nconst useStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    // references\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.collection('images');\n    \n    storageRef.put(file).on('state_changed', (snap) => {\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n      setProgress(percentage);\n    }, (err) => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      console.log(url);\n      const createdAt = timestamp();\n      await collectionRef.add({ url, createdAt });\n      setUrl(url);\n    });\n  }, [file]);\n\n  return { progress, url, error };\n}\n\nexport default useStorage;","import React, { useEffect } from \"react\"\nimport useStorage from \"../hooks/useStorage\"\nimport {motion} from \"framer-motion\"\n\nconst ProgressBar = ({file, setFile, setModal}) => {\n\n    const {url, progress} = useStorage(file)\n\n    useEffect(() => {\n        if (url) {\n            setFile(null)\n            setModal(true)\n        }\n    },[url, setFile])\n\n    return (\n        <motion.div className=\"progress-bar\"\n        initial = {{width: 0}}\n        animate = {{width: progress + \"%\"}}\n        >\n        </motion.div>\n    )\n}\n\nexport default ProgressBar;  ","import React, { useState } from 'react';\nimport ProgressBar from './ProgressBar';\n\nconst UploadForm = ({ setModal }) => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n\n  const types = ['image/png', 'image/jpeg'];\n\n  const handleChange = (e) => {\n    let selected = e.target.files[0];\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError('');\n    } else {\n      setFile(null);\n      setError('Please select an image file (png or jpg)');\n    }\n  };\n\n  return (\n    <form className=\"uploadForm\" onChange={handleChange} >\n      <label className=\"uploadFile\">\n        <span className=\"\">+</span>\n        <input type=\"file\" />\n      </label>\n      <div className=\"output\">\n        {error && <div className=\"error\">{error}</div>}\n        {file && <div>{`uploading ${file.name}...`} </div>}\n        {file && <ProgressBar file={file} setModal={setModal} setFile={setFile} />}\n      </div>\n    </form>\n  );\n}\n\nexport default UploadForm;","import React, {useState } from \"react\"\nimport UploadForm from \"./UploadForm\"\n\nfunction PostCard({ selectedImg, setModal, setSelectedImg }) {\n    const [backCard, setBackCard] = useState(false);\n    const [address, setAddress] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [stamp, setStamp] = useState(\"/stamp.jpg\")\n\n    const messageLimit = 200;\n    const addressLimit = 80;\n\n\n    const [messageLeft, setMessageLeft] = useState(messageLimit);\n    const [addressLeft, setAddressLeft] = useState(addressLimit);\n\n\n    function addressChange(e) {\n        let currAddress = e.target.value;\n\n        if (currAddress.length >= addressLimit) {\n            currAddress = currAddress.slice(0, addressLimit)\n        }\n\n        setAddressLeft(addressLimit - currAddress.length);\n        setAddress(currAddress);\n    }\n\n\n    function messageChange(e) {\n        let currMessage = e.target.value;\n\n        if (currMessage.length >= messageLimit) {\n            currMessage = currMessage.slice(0, messageLimit)\n        }\n\n        setMessageLeft(messageLimit - currMessage.length);\n        setMessage(currMessage);\n    }\n\n    function stampClick(e){\n        setStamp(e.target.src)\n    }\n\n\n\n    return (\n        <>\n\n            {backCard && <UploadForm setSelectedImg={setSelectedImg} setModal={setModal}/> }\n\n            <div className=\"genCardContainer\">\n\n                {backCard && <div className=\"postCardContainerBack\">\n                    <div className=\"post\" onClick={() => { setModal(true); }} >\n                        {\n                            selectedImg ? <img src={selectedImg} /> :\n                                <p > Click here to select image</p>\n                        }\n                    </div>\n                </div>\n                }\n\n                {!backCard && <div className=\"postCardContainerFront\">\n                    <div className=\"stamps\">\n                        <div>\n                            Select Stamp <br />\n                            <span style={{fontSize: \"2rem\", fontWeight: \"bold\"}}> &#8659; </span> \n                        </div>\n                        <img src=\"/stamp2.jpg\" alt=\"stamp\" onClick={(e)=>stampClick(e)} style={{ width: \"80px\" }} />\n                        <img src=\"/stamp3.jpg\" alt=\"stamp\" onClick={(e)=>stampClick(e)} style={{ width: \"80px\" }} />\n                        <img src=\"/stamp4.jpg\" alt=\"stamp\" onClick={(e)=>stampClick(e)}style={{ width: \"80px\" }} />\n                        <img src=\"/stamp5.jpg\" alt=\"stamp\" onClick={(e)=>stampClick(e)} style={{ width: \"80px\" }} />\n                    </div>\n\n                    <div className=\"post\">\n                        <div className=\"message\">\n                            <textarea value={message} placeholder=\"add message here\" onChange={messageChange} />\n                            <span className=\"line line1\"> </span>\n                            <span className=\"line line2\">  </span>\n                            <span className=\"line line3\">  </span>\n                            <span className=\"line line4\">  </span>\n                            <span className=\"line line5\">  </span>\n                            <span className=\"line line6\">  </span>\n                            <span className=\"line line7\">  </span>\n                            <span>{`${messageLeft}/${messageLimit}`} </span>\n                        </div>\n\n                        <div className=\"address\" >\n                            <textarea value={address} placeholder=\"Address here\" onChange={addressChange} />\n                            <span className=\"line line1\"> </span>\n                            <span className=\"line line2\">  </span>\n                            <span className=\"line line3\">  </span>\n                            <span className=\"line line4\">  </span>\n                            <span> {`${addressLeft}/${addressLimit}`} </span>\n\n                        </div>\n                        <div className=\"stamp\">\n                            <img src={stamp} alt=\"stamp\" />\n                        </div>\n                    </div>\n                </div>\n\n                }\n\n                <button className=\"flipCard\" onClick={() => { setBackCard(!backCard) }}>\n                    <div> Flip PostCard </div>\n                </button>\n            </div>\n        </>\n\n    )\n}\n\n\n\n\nexport default PostCard;","import React from 'react';\n\nconst Title = () => {\n  return (\n      <div className=\"title\">\n        <h2>PostCard Builder</h2>\n      </div>\n  )\n}\n\nexport default Title;","import React, { useState } from 'react';\nimport Modal from './comps/Modal';\nimport PostCard from './comps/PostCard';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\n\nfunction App() {\n  const [modal, setModal] = useState(false)\n  const [selectedImg, setSelectedImg] = useState(null)\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <PostCard selectedImg={selectedImg} setSelectedImg={setSelectedImg} setModal={setModal} />\n      {modal && <Modal setSelectedImg={setSelectedImg} setModal={setModal}/>}\n      \n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}